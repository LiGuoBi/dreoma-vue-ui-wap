body {
  font-size: $fs-base;
  color: $black;
  font-family: "Microsoft YaHei", "Avenir", Helvetica, Arial, sans-serif;
  background-color: #fff;
  // 解决移动端iOS滚动卡顿现象
  // -webkit-overflow-scrolling: touch;
}

// 有赞样式
// .van-overflow-hidden {
//   // 解决在滚动标签中设置遮盖层，不能遮盖滚动标签同级标签的情况(IOS的BUG)
//   -webkit-overflow-scrolling: auto;
// }

div,
section,
footer,
header,
p,
a,
footer,
dl,
dt,
dt,
ul,
li,
span,
i,
button {
  box-sizing: border-box;
}

p,
dl,
dd,
ul {
  margin: 0;
}

ul {
  padding: 0;
}

ul, li {
  list-style: none;
}

a {
  color: $black;
  display: block;
  text-decoration: none;
}

img {
  display: block;
  width: 100%;
  border: none;
}

input,
button,
textarea {
  padding: 0;
  border: none;
  background-color: transparent;
}
button {
  display: block;
}

// 设置框中的提示文本居中 IOS
input,
textarea {
  line-height: normal;
  outline: none;
}

textarea {
  resize: none;
}


// flex布局 API:https://www.runoob.com/w3cnote/flex-grammar.html
// 垂直方向居中
.flex-v {
  display: flex;
  align-items: center;
}

// 水平方向居中
.flex-l {
  display: flex;
  justify-content: center;
}

// 垂直水平方向居中
.flex-c {
  display: flex;
  align-items: center;
  justify-content: center;
}
// 换行显示
.flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

// flex 布局
.flex {
  display: flex;
}
// flex-direction 属性决定主轴的方向（即项目的排列方向）
// 主轴为垂直方向，起点在上沿
.column {
  flex-direction: column;
}
// 水平-相反
.row-reverse {
  flex-direction: row-reverse;
}
// 垂直-相反
.column-reverse {
  flex-direction: column-reverse;
}
// justify-content属性定义了项目在主轴上的对齐方式。
// 两端对齐，项目之间的间隔都相等
.between {
  justify-content: space-between;
}
// 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍
.around {
  justify-content: space-around;
}
// 水平右对齐
.l-end {
  justify-content: flex-end;
}
// align-items属性定义项目在交叉轴上如何对齐。

// flex 占满剩余空间
.flex-item {
  flex: 1;
}


// 文本通用样式
.single-txt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.multiline-txt {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  word-break: break-word;
}
.lh {
  line-height: 0.4rem;
}
.tc {
  text-align: center;
}
.tr {
  text-align: right;
}
.ovh {
  overflow: hidden;
}
// end 文本通用样式

// 图片样式
.bg {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}
.avatar {
  width: 1.2rem;
  height: 1.2rem;
  overflow: hidden;
  border-radius: 50%;
}
// 图片高度100%
.pich {
  height: 100%;
}
img.cover {
  object-fit: cover;
}
// 边距


// page 切换
/*
  vue过渡动画添加方式
  API: https://cn.vuejs.org/v2/guide/transitions.html#%E8%BF%87%E6%B8%A1%E7%9A%84%E7%B1%BB%E5%90%8D

  v-enter : 定义进入动画
  v-enter-active : 定义进入过渡
  v-leave-active : 定义离开过渡
  v-leave-to : 定义离开动画
*/
/* 滑入淡入 - 滑出淡出 */
.slide-fade-left-enter, /* slide-fade-left 进入动画 */
.slide-fade-right-leave-to { /* slide-fade-right 离开动画 */
  opacity: 0;
  transform: translate(50px, 0);
}
/* 进入过渡 */
.slide-fade-left-enter-active,
.slide-fade-right-enter-active {
  width: 100%;
  position: absolute;
  z-index: 4;
  transition: all 0.8s cubic-bezier(.55, 0, .1, 1);
}
/* 离开过渡 */
.slide-fade-left-leave-active,
.slide-fade-right-leave-active {
  width: 100%;
  position: absolute;
  z-index: 1;
  transition: all 0.8s cubic-bezier(.55, 0, .1, 1);
}
.slide-fade-right-enter, /* slide-fade-right 进入动画 */
.slide-fade-left-leave-to { /* slide-fade-left 离开动画 */
  opacity: 0;
  transform: translate(-50px, 0);
}
/* 淡入 - 淡出 */
.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.5s;
}
.fade-enter,
.fade-leave-to {
  opacity: 0;
}
/* 右侧滑入 */
.slide-in-right-enter,
.slide-out-right-leave-to {
  transform: translate3d(100%, 0, 0);
}
.slide-out-right-leave-to {
  z-index: 2;
}
.slide-in-right-enter-active,
.slide-in-right-leave-active,
.slide-out-right-enter-active,
.slide-out-right-leave-active {
  min-height: 100vh;
  width: 100%;
  position: absolute;
  transition: transform 0.5s ease;
}
// 切换动画 end

// 项目公共样式
#app {
  position: relative;
  width: 7.5rem;
  margin: 0 auto;
}
